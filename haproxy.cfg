global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


frontend http
  mode http
  http-response add-header "X-Clacks-Overhead" "GNU Terry Pratchett"
  bind *:80
  # redirect scheme https if !{ ssl_fc }
  bind *:443 v4v6 alpn h2,http/1.1 ssl crt /etc/ssl/haproxy
  
  # Define ACLs
  acl elastic-acl hdr(host) -i elastic.planex.com
  acl mattermost-acl hdr(host) -i mattermost.planex.com
  
  use_backend elastic-backend if elastic-acl
  use_backend mattermost-backend if mattermost-acl

  # Only from my home network
  
  default_backend deny
  log /dev/log local0 debug

backend deny
    mode http
    http-request deny deny_status 403

backend mattermost-backend
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  option httpchk GET /api/v4/system/ping HTTP/1.1
  http-check expect ! rstatus ^5
  server local 127.0.0.1:8065 check

backend elastic-backend
  mode http
  option forwardfor
  option httpclose
  balance roundrobin
  server elastic1 127.0.0.1:9200 check inter 1000 rise 5 fall 1
  server elastic2 127.0.0.1:9201 check inter 1000 rise 5 fall 1
  server elastic3 127.0.0.1:9202 check inter 1000 rise 5 fall 1

backend stats-backend
  mode http
  server local 127.0.0.1:8404 check inter 1000

listen stats
  bind *:8404
  mode http
  stats enable
  stats hide-version
  stats refresh 10s
  stats uri /stats  
  stats admin if LOCALHOST
